name: CI

on: [push]

env:
  CI: true
  NODE_ENV: test
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.1-alpine
        ports:
          - 5432:5432

    strategy:
      matrix:
        node: [14, 16, 18]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v3
        with:
          version: ${{ matrix.node }}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-{{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Node.js dependencies
        if: "steps.yarn-cache.outputs.cache-hit != 'true'"
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Tests
        run: yarn test

      - name: Build
        run: yarn build

      - name: Setup for deploy
        if: "startsWith(github.ref, 'refs/tags/v') && matrix.node == 14"
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          npm whoami

      # prerelease versions must have a '-' to be released
      - name: Publish unstable
        if: "startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-') && matrix.node == 14"
        run: |
          npm publish --tag next

      # latest tags must not have a prerelease number
      - name: Publish
        if: "startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-') && matrix.node == 14"
        run: |
          npm publish
